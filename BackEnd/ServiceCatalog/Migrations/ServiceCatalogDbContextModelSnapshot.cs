// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceCatalog.DbContexts;

namespace ServiceCatalog.Migrations
{
    [DbContext(typeof(ServiceCatalogDbContext))]
    partial class ServiceCatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServiceCatalog.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea314"),
                            Name = "Кузовные работы"
                        },
                        new
                        {
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315"),
                            Name = "Ходовая часть"
                        },
                        new
                        {
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea316"),
                            Name = "Электроника"
                        });
                });

            modelBuilder.Entity("ServiceCatalog.Entities.ServiceItem", b =>
                {
                    b.Property<int>("ServiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ServiceItemId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ServiceItems");

                    b.HasData(
                        new
                        {
                            ServiceItemId = 8,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea314"),
                            Description = "Полировка кузова",
                            Name = "Полировка",
                            Price = 1000m
                        },
                        new
                        {
                            ServiceItemId = 1,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea314"),
                            Description = "Покраска кузова",
                            Name = "Покраска",
                            Price = 50000m
                        },
                        new
                        {
                            ServiceItemId = 2,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315"),
                            Description = "Диагностика подвески",
                            Name = "Диагностика",
                            Price = 3000m
                        },
                        new
                        {
                            ServiceItemId = 3,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315"),
                            Description = "Замена сайлентблоков",
                            Name = "Замена сайлентблоков",
                            Price = 1500m
                        },
                        new
                        {
                            ServiceItemId = 4,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315"),
                            Description = "Ремонт стоек стабилизатора",
                            Name = "Ремонт стоек стаблилизатора",
                            Price = 5000m
                        },
                        new
                        {
                            ServiceItemId = 5,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea316"),
                            Description = "Диагностика системы зажигания",
                            Name = "Диагностика системы зажигания",
                            Price = 500m
                        },
                        new
                        {
                            ServiceItemId = 6,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea316"),
                            Description = "Ремонт генератора",
                            Name = "Ремонт генератора",
                            Price = 3500m
                        },
                        new
                        {
                            ServiceItemId = 7,
                            CategoryId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea316"),
                            Description = "Установка парктроника",
                            Name = "Установка парктроника",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("ServiceCatalog.Entities.ServiceItem", b =>
                {
                    b.HasOne("ServiceCatalog.Entities.Category", "Category")
                        .WithMany("ServiceItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
